---
/* Navbar.astro */
import { Icon } from "astro-icon/components";

const navbarItems = ["is", "work", "projects", "about", "skills"];
---

<div class="navbar" id="navigation">
  <!-- Logo/Current Section -->
  <div class="flex items-center">
    <h3
      id="current-section"
      class="text-2xl sm:text-3xl text-purple-600 font-bold tracking-wider font-roboto-mono transition-colors"
    >
      .is()
    </h3>
  </div>

  <!-- Mobile Menu Trigger -->
  <button
    id="mobile-menu-trigger"
    class="lg:hidden flex items-center justify-center z-50 text-white"
    aria-label="Toggle mobile menu"
  >
    <div class="hamburger-icon">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </div>
  </button>

  <!-- Desktop Navigation -->
  <div class="hidden lg:flex gap-4 items-center" id="desktop-nav">
    <!-- Links / Secciones -->
    <nav
      class="relative flex justify-center items-center gap-6 text-stone-300 text-lg"
    >
      <!-- Nav indicator - animated background element -->
      <div
        id="nav-indicator"
        class="absolute h-1 bg-purple-500 bottom-0 transition-all duration-300 opacity-0"
      >
      </div>
      {
        navbarItems.map((i) => (
          <a
            href={`#${i}`}
            class="link-section nav-link"
            role="menuitem"
            tabindex="0"
          >
            .{i}()
          </a>
        ))
      }
    </nav>
  </div>

  <!-- Mobile Menu -->
  <div
    id="mobile-menu"
    class="fixed inset-0 bg-zinc-900/95 backdrop-blur-lg transform translate-x-full transition-transform duration-300 ease-in-out lg:hidden z-40 flex flex-col justify-center items-center"
  >
    <nav class="flex flex-col items-center gap-6 text-xl">
      <a
        href="#is"
        class="mobile-nav-link py-3 px-6 w-full text-center"
        data-section="is">.is()</a
      >
      {
        navbarItems.map((i) => (
          <a
            href={`#${i}`}
            class="mobile-nav-link py-3 px-6 w-full text-center"
          >
            .{i}()
          </a>
        ))
      }
    </nav>

    <!-- Mobile Menu Phrase -->
    <div class="mt-12 flex gap-6">
      <a
        href="#"
        class="text-stone-400 hover:text-purple-500 transition-colors"
      >
        <Icon name="mdi:github" class="w-6 h-6" />
      </a>
      <a
        href="#"
        class="text-stone-400 hover:text-purple-500 transition-colors"
      >
        <Icon name="mdi:linkedin" class="w-6 h-6" />
      </a>
      <a
        href="#"
        class="text-stone-400 hover:text-purple-500 transition-colors"
      >
        <Icon name="mdi:twitter" class="w-6 h-6" />
      </a>
    </div>
  </div>
</div>

<style>
  @reference "tailwindcss";

  .link-section {
    @apply relative text-stone-300 font-semibold py-1 px-2;
  }

  .link-section-active {
    @apply relative text-purple-500 font-bold py-1 px-2;
  }

  .navbar {
    @apply flex z-50 justify-between items-center bg-zinc-900 p-4 shadow-lg fixed;
    width: 100%; /* Forzar ancho completo */
    box-sizing: border-box; /* Incluir padding en el ancho */
    max-width: 100vw; /* Limitar al ancho de la ventana */
  }

  /* Animation for nav links */
  .nav-link {
    @apply relative overflow-hidden;
  }

  .nav-link::after {
    content: "";
    @apply absolute left-0 bottom-0 w-0 h-0.5 bg-purple-500 transition-all duration-300;
  }

  .nav-link:hover::after,
  .link-section-active::after {
    @apply w-full;
  }

  /* Mobile menu styling */
  .mobile-nav-link {
    @apply relative text-stone-300 font-semibold transition-all duration-200;
    @apply border-b border-zinc-800/50 w-64;
  }

  .mobile-nav-link:hover,
  .mobile-nav-link.active {
    @apply text-purple-500 bg-zinc-800/30;
  }

  /* Hamburger icon styling */
  .hamburger-icon {
    @apply relative w-6 h-6 flex flex-col justify-center items-center;
  }

  .hamburger-line {
    @apply absolute bg-white w-6 h-0.5 rounded-full transition-all duration-300;
  }

  .hamburger-line:nth-child(1) {
    transform: translateY(-8px);
  }

  .hamburger-line:nth-child(3) {
    transform: translateY(8px);
  }

  /* Hamburger animation when menu is open */
  .menu-open .hamburger-line:nth-child(1) {
    transform: rotate(45deg);
  }

  .menu-open .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .menu-open .hamburger-line:nth-child(3) {
    transform: rotate(-45deg);
  }

  /* Body lock when menu is open */
  body.menu-open {
    overflow: hidden;
  }
</style>

<script>
  import { setupNavigation } from "../../scripts/Navigation";

  document.addEventListener("DOMContentLoaded", () => {
    const navigation = document.getElementById("navigation");
    const mobileMenuTrigger = document.getElementById("mobile-menu-trigger");
    const mobileMenu = document.getElementById("mobile-menu");
    const mobileNavLinks = document.querySelectorAll(".mobile-nav-link");
    const currentSection = document.getElementById("current-section");

    // Asegurar que el navbar tiene ancho completo
    if (navigation) {
      navigation.style.width = "100%";
    }

    // Toggle mobile menu
    if (mobileMenuTrigger && mobileMenu) {
      mobileMenuTrigger.addEventListener("click", () => {
        mobileMenu.classList.toggle("translate-x-full");
        document.body.classList.toggle("menu-open");
        mobileMenuTrigger.classList.toggle("menu-open");
      });

      // Close mobile menu when a link is clicked
      mobileNavLinks.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("translate-x-full");
          document.body.classList.remove("menu-open");
          mobileMenuTrigger.classList.remove("menu-open");

          // Update current section text
          const section = link.getAttribute("data-section");
          if (currentSection && section) {
            currentSection.textContent = `.${section}()`;
          }
        });
      });
    }

    // Animated indicator for desktop nav
    const navIndicator = document.getElementById("nav-indicator");
    const desktopNavLinks = document.querySelectorAll("#desktop-nav .nav-link");

    if (navIndicator && desktopNavLinks.length > 0) {
      // Update indicator position on hover
      desktopNavLinks.forEach((link) => {
        // Update current section when clicking on desktop links
        link.addEventListener("click", () => {
          if (currentSection) {
            const href = link.getAttribute("href");
            if (href) {
              const sectionName = href.replace("#", "");
              currentSection.textContent = `.${sectionName}()`;
            }
          }
        });
      });

      // Set initial position to active link if exists
      const initialActiveLink = document.querySelector(
        "#desktop-nav .link-section-active"
      );
      if (initialActiveLink) {
        setTimeout(() => {
          const activeLinkRect = initialActiveLink.getBoundingClientRect();
          navIndicator.style.width = `${activeLinkRect.width - 16}px`;
          navIndicator.style.opacity = "1";
        }, 100); // Pequeño retraso para asegurar que los elementos estén renderizados
      }
    }
  });

  setupNavigation();
</script>
